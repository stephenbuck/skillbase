<project>

  <modelVersion>4.1.0</modelVersion>

  <artifactId>skillbase-backend</artifactId>
  <groupId>com.headspin.skillbase</groupId>
  <packaging>pom</packaging>
  <version>0.1</version>
  <name>skillbase-backend</name>

  <parent>
    <artifactId>skillbase</artifactId>
    <groupId>com.headspin.skillbase</groupId>
    <version>0.1</version>
  </parent>

  <properties>

    <java.version>24</java.version>

    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <maven.compiler.proc>full</maven.compiler.proc>
    <maven.compiler.release>${java.version}</maven.compiler.release>
    <maven.compiler.version>3.14.0</maven.compiler.version>
    <maven.buildhelper.version>3.6.1</maven.buildhelper.version>
    <maven.buildplan.version>2.2.2</maven.buildplan.version>
    <maven.clean.version>3.5.0</maven.clean.version>
    <maven.dependency.version>3.8.1</maven.dependency.version>
    <maven.exec.version>3.5.1</maven.exec.version>
    <maven.failsafe.version>3.5.3</maven.failsafe.version>
    <maven.formatter.version>2.26.0</maven.formatter.version>
    <maven.install.version>4.0.0-beta-2</maven.install.version>
    <maven.jar.version>3.4.2</maven.jar.version>
    <maven.javadoc.version>3.11.2</maven.javadoc.version>
    <maven.resources.version>3.3.1</maven.resources.version>
    <maven.rewrite.version>6.11.0</maven.rewrite.version>
    <maven.surefire.version>3.5.3</maven.surefire.version>
    <maven.templating.version>3.0.0</maven.templating.version>
    <maven.versions.version>2.18.0</maven.versions.version>
    <maven.war.version>3.4.0</maven.war.version>

    <apicurio.version>3.0.9</apicurio.version>
    <archunit.version>1.4.1</archunit.version>
    <cloudevents.version>4.0.1</cloudevents.version>
    <config.etcd.version>3.0.1</config.etcd.version>
    <cucumber.version>7.23.0</cucumber.version>
    <datafaker.version>2.4.3</datafaker.version>
    <docker.plugin.version>0.46.0</docker.plugin.version>
    <elastic.search.version>8.15.0</elastic.search.version>
    <elastic.clients.version>9.0.2</elastic.clients.version>
    <elastic.plugin.version>6.27</elastic.plugin.version>
    <flipt.version>1.1.2</flipt.version>
    <flowable.version>7.1.0</flowable.version>
    <fluentd.log4j.version>1.0.0</fluentd.log4j.version>
    <graphql.version>230521-nf-execution</graphql.version>
    <handlebars.version>4.4.0</handlebars.version>
    <jackson.databind.version>2.19.0</jackson.databind.version>
    <jakarta.annotation.version>3.0.0</jakarta.annotation.version>
    <jakarta.data.version>1.0.1</jakarta.data.version>
    <jakarta.inject.version>2.0.1.MR</jakarta.inject.version>
    <jakarta.json.version>2.1.3</jakarta.json.version>
    <jakarta.json.bind.version>3.0.1</jakarta.json.bind.version>
    <jakarta.persistence.version>3.2.0</jakarta.persistence.version>
    <jakarta.version>11.0.0-RC1</jakarta.version>
    <java.problem.version>0.27.1</java.problem.version>
    <java.s3.spi.version>2.2.1</java.s3.spi.version>
    <javax.cache.version>1.1.1</javax.cache.version>
    <jetcd.version>0.8.5</jetcd.version>
    <json.validator.version>1.5.7</json.validator.version>
    <junit.version>5.13.1</junit.version>
    <junit.platform.version>1.13.1</junit.platform.version>
    <kafka.clients.version>4.0.0</kafka.clients.version>
    <keycloak.admin.version>26.0.5</keycloak.admin.version>
    <keycloak.client.version>26.2.5</keycloak.client.version>
    <lettuce.version>6.7.1.RELEASE</lettuce.version>    
    <liquibase.maven.version>4.32.0</liquibase.maven.version>
    <liquibase.version>4.32.0</liquibase.version>
    <log4j.version>2.24.3</log4j.version>
    <lombok.version>1.18.38</lombok.version>
    <mapstruct.version>1.6.3</mapstruct.version>
    <microprofile.config.version>3.1</microprofile.config.version>
    <microprofile.fault-tolerance.version>4.1.2</microprofile.fault-tolerance.version>
    <microprofile.graphql.version>2.0</microprofile.graphql.version>
    <microprofile.health.version>4.0.1</microprofile.health.version>
    <microprofile.jwt.version>2.2-RC1</microprofile.jwt.version>
    <microprofile.openapi.version>4.1</microprofile.openapi.version>
    <microprofile.telemetry.version>2.1</microprofile.telemetry.version>
    <minio.version>8.5.17</minio.version>
    <mockito.version>5.18.0</mockito.version>
    <mysql.version>9.3.0</mysql.version>
    <openfeature.version>1.15.1</openfeature.version>
    <opensearch.version>3.1.0</opensearch.version>
    <postgresql.version>42.7.7</postgresql.version>
    <pulsar.version>4.0.5</pulsar.version>
    <recordbuilder.version>47</recordbuilder.version>
    <rest.assured.version>5.5.5</rest.assured.version>
    <revapi.plugin.version>0.15.1</revapi.plugin.version>
    <revapi.java.version>0.28.4</revapi.java.version>
    <seaweedfs.version>3.80</seaweedfs.version>
    <slf4j.version>2.1.0-alpha1</slf4j.version>
    <smallrye.config.version>3.13.2</smallrye.config.version>
    <smallrye.graphql.version>2.14.0</smallrye.graphql.version>
    <smallrye.graphql-ui.version>2.14.0</smallrye.graphql-ui.version>
    <smallrye.health.version>4.2.0</smallrye.health.version>
    <smallrye.openapi.version>4.0.0-alpha2</smallrye.openapi.version>
    <spring.boot.version>3.5.0</spring.boot.version>
    <spring.boot.plugin.version>3.5.0</spring.boot.plugin.version>
    <spring.web.version>7.0.0-M6</spring.web.version>
    <swagger.version>2.2.31</swagger.version>
    <testcontainers.version>1.21.1</testcontainers.version>
    <transactionoutbox.version>6.0.609</transactionoutbox.version>
    <unleash.version>11.0.0</unleash.version>
    <valkey.version>5.3.0</valkey.version>
    <wildfly.maven.version>5.1.3.Final</wildfly.maven.version>
    <xmemcached.version>2.4.8</xmemcached.version>

  </properties>

  <build>

    <pluginManagement>

      <plugins>

        <plugin>
          <artifactId>apicurio-registry-maven-plugin</artifactId>
          <groupId>io.apicurio</groupId>
          <version>${apicurio.version}</version>
         </plugin>
         
         <plugin>
          <artifactId>build-helper-maven-plugin</artifactId>
          <groupId>org.codehaus.mojo</groupId>
          <version>${maven.buildhelper.version}</version>
          <executions>
            <execution>
              <id>get-local-ip</id>
              <goals>
                <goal>local-ip</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <artifactId>buildplan-maven-plugin</artifactId>
          <groupId>org.codehaus.mojo</groupId>
          <version>${maven.buildplan.version}</version>
        </plugin>

        <plugin>
          <artifactId>docker-maven-plugin</artifactId>
          <groupId>io.fabric8</groupId>
          <version>${docker.plugin.version}</version>
        </plugin>
        
        <!--
        <plugin>
          <artifactId>elasticsearch-maven-plugin</artifactId>
          <groupId>com.github.alexcojocaru</groupId>
          <version>${elastic.plugin.version}</version>
          <configuration>
              <version>${elastic.search.version}</version>
              <clusterName>skillbase</clusterName>
              <transportPort>9300</transportPort>
              <httpPort>9200</httpPort>
          </configuration>
          <executions>
              <execution>
                  <id>start-elasticsearch</id>
                  <phase>pre-integration-test</phase>
                  <goals>
                      <goal>runforked</goal>
                  </goals>
              </execution>
              <execution>
                  <id>stop-elasticsearch</id>
                  <phase>post-integration-test</phase>
                  <goals>
                      <goal>stop</goal>
                  </goals>
              </execution>
          </executions>
        </plugin>
        -->

        <plugin>
          <artifactId>exec-maven-plugin</artifactId>
          <groupId>org.codehaus.mojo</groupId>
          <version>${maven.exec.version}</version>
          <executions>
            <execution>
              <goals>
                <goal>exec</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        
        <!--
        <plugin>
          <artifactId>formatter-maven-plugin</artifactId>
          <groupId>net.revelc.code.formatter</groupId>
          <version>${maven.formatter.version}</version>
          <executions>
            <execution>
              <goals>
                <goal>format</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        -->

        <plugin>
          <artifactId>liquibase-maven-plugin</artifactId>
          <groupId>org.liquibase</groupId>
          <version>${liquibase.maven.version}</version>
        </plugin>
	
        <plugin>
	  <artifactId>maven-clean-plugin</artifactId>
	  <groupId>org.apache.maven.plugins</groupId>
	  <version>${maven.clean.version}</version>
        </plugin>

        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <groupId>org.apache.maven.plugins</groupId>
          <version>${maven.compiler.version}</version>
          <configuration>
            <source>${maven.compiler.source}</source>
            <target>${maven.compiler.target}</target>
            <release>${maven.compiler.release}</release>
          </configuration>
        </plugin>

        <plugin>
          <artifactId>maven-dependency-plugin</artifactId>
          <groupId>org.apache.maven.plugins</groupId>
          <version>${maven.dependency.version}</version>
          <executions>
            <execution>
              <id>copy</id>
              <phase>package</phase>
              <goals>
                <goal>copy</goal>
              </goals>
              <configuration>
                <artifactItems>
                  <artifactItem>
                    <groupId>[ groupId ]</groupId>
                    <artifactId>[ artifactId ]</artifactId>
                    <version>[ version ]</version>
                    <type>[ packaging ]</type>
                    <classifier> [classifier - optional] </classifier>
                    <overWrite>[ true or false ]</overWrite>
                    <outputDirectory>[ output directory ]</outputDirectory>
                    <destFileName>[ filename ]</destFileName>
                  </artifactItem>
                </artifactItems>
                <!-- other configurations here -->
              </configuration>
            </execution>
          </executions>
        </plugin>
        
        <plugin>
          <artifactId>maven-failsafe-plugin</artifactId>
          <groupId>org.apache.maven.plugins</groupId>
          <version>${maven.failsafe.version}</version>
          <executions>
            <execution>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <groupId>org.apache.maven.plugins</groupId>
          <version>${maven.install.version}</version>
        </plugin>
	
	<plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <groupId>org.apache.maven.plugins</groupId>
	  <version>${maven.jar.version}</version>
        </plugin>

        <plugin>
          <artifactId>maven-javadoc-plugin</artifactId>
          <groupId>org.apache.maven.plugins</groupId>
          <version>${maven.javadoc.version}</version>
          <configuration>
            <show>private</show>
            <nohelp>true</nohelp>
          </configuration>
        </plugin>

        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <groupId>org.apache.maven.plugins</groupId>
          <version>${maven.resources.version}</version>
        </plugin>

        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <groupId>org.apache.maven.plugins</groupId>
          <version>${maven.surefire.version}</version>
        </plugin>
  
        <plugin>
          <artifactId>maven-war-plugin</artifactId>
          <groupId>org.apache.maven.plugins</groupId>
          <version>${maven.war.version}</version>
        </plugin>

        <plugin>
          <artifactId>revapi-maven-plugin</artifactId>
          <groupId>org.revapi</groupId>
          <version>${revapi.plugin.version}</version>
          <dependencies>
            <dependency>
              <artifactId>revapi-java</artifactId>
              <groupId>org.revapi</groupId>
              <version>${revapi.java.version}</version>
            </dependency>
          </dependencies>
          <executions>
            <execution>
              <id>check</id>
              <goals><goal>check</goal></goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <artifactId>rewrite-maven-plugin</artifactId>
          <groupId>org.openrewrite.maven</groupId>
          <version>${maven.rewrite.version}</version>
          <configuration>
            <activeRecipes>
            </activeRecipes>
            <activeStyles>
            </activeStyles>
            <configLocation>./rewrite.yml</configLocation>
            <failOnDryRunResults>false</failOnDryRunResults>
            <exclusions>
            </exclusions>
            <plainTextMasks>
            </plainTextMasks>
          </configuration>
        </plugin>

        <!--
        <plugin>
          <artifactId>smallrye-graphql-maven-plugin</artifactId>
          <groupId>io.smallrye</groupId>
          <version>${smallrye.graphql.version}</version>
          <executions>
            <execution>
                <goals>
                    <goal>generate-schema</goal>
                </goals>
            </execution>
          </executions>
        </plugin>
        -->

        <!--
        <plugin>
          <artifactId>smallrye-open-api-maven-plugin</artifactId>
          <groupId>io.smallrye</groupId>
          <version>${smallrye.openapi.version}</version>
          <executions>
            <execution>
              <goals>
                <goal>generate-schema</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        -->

        <plugin>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <groupId>org.springframework.boot</groupId>
          <version>${spring.boot.plugin.version}</version>
          <executions>
            <execution>
              <goals>
                <goal>repackage</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <artifactId>templating-maven-plugin</artifactId>
          <groupId>org.codehaus.mojo</groupId>
          <version>${maven.templating.version}</version>
        </plugin>
        
        <plugin>  
          <artifactId>versions-maven-plugin</artifactId>  
          <groupId>org.codehaus.mojo</groupId>  
          <version>${maven.versions.version}</version>  
        </plugin>  

        <plugin>
          <artifactId>wildfly-maven-plugin</artifactId>
          <groupId>org.wildfly.plugins</groupId>
          <version>${wildfly.maven.version}</version>
          <configuration>
            <hostname>localhost</hostname>
            <port>9990</port>
            <username>admin</username>
            <password>admin</password>
          </configuration>
        </plugin>
      
      </plugins>

    </pluginManagement>

  </build>

<dependencyManagement>

    <dependencies>

      <!-- Project -->

      <dependency>
        <artifactId>skillbase-backend-common</artifactId>
        <groupId>com.headspin.skillbase</groupId>
        <version>0.1</version>
      </dependency>
  
      <!-- External -->

      <dependency>
        <artifactId>aws-java-nio-spi-for-s3</artifactId>
        <groupId>software.amazon.nio.s3</groupId>
        <version>${java.s3.spi.version}</version>
      </dependency>
    
      <dependency>
          <artifactId>cache-api</artifactId>
          <groupId>javax.cache</groupId>
          <version>${javax.cache.version}</version>
      </dependency>

      <dependency>
        <artifactId>cloudevents-api</artifactId>
        <groupId>io.cloudevents</groupId>
        <version>${cloudevents.version}</version>
      </dependency>

      <dependency>
        <artifactId>cloudevents-core</artifactId>
        <groupId>io.cloudevents</groupId>
        <version>${cloudevents.version}</version>
      </dependency>

      <dependency>
        <artifactId>cloudevents-json-jackson</artifactId>
        <groupId>io.cloudevents</groupId>
        <version>${cloudevents.version}</version>
      </dependency>

      <dependency>
        <artifactId>cloudevents-kafka</artifactId>
        <groupId>io.cloudevents</groupId>
        <version>${cloudevents.version}</version>
      </dependency>

      <dependency>
        <artifactId>configsource-etcd</artifactId>
        <groupId>org.microprofile-ext.config-ext</groupId>
        <version>${config.etcd.version}</version>
      </dependency>

      <!--
      <dependency>
        <artifactId>elasticsearch</artifactId>
        <groupId>org.elasticsearch</groupId>
        <version>${elastic.clients.version}</version>
      </dependency>
      -->

      <dependency>
        <artifactId>elasticsearch-java</artifactId>
        <groupId>co.elastic.clients</groupId>
        <version>${elastic.clients.version}</version>
      </dependency>

      <dependency>
        <artifactId>flipt-java</artifactId>
        <groupId>io.flipt</groupId>
        <version>${flipt.version}</version>
      </dependency>
    
      <dependency>
        <artifactId>flowable-engine</artifactId>
        <groupId>org.flowable</groupId>
        <version>${flowable.version}</version>
      </dependency>

      <dependency>
        <artifactId>fluentd-log4j-appender</artifactId>
        <groupId>io.github.technologize</groupId>
        <version>${fluentd.log4j.version}</version>
      </dependency>

      <dependency>
        <artifactId>graphql-java</artifactId>
        <groupId>com.graphql-java</groupId>
        <version>${graphql.version}</version>
      </dependency>

      <dependency>
        <artifactId>handlebars</artifactId>
        <groupId>com.github.jknack</groupId>
        <version>${handlebars.version}</version>
      </dependency>
    
      <dependency>
        <artifactId>jackson-databind</artifactId>
        <groupId>com.fasterxml.jackson.core</groupId>
        <version>${jackson.databind.version}</version>
      </dependency>

      <dependency>
        <artifactId>jackson-datatype-jsr310</artifactId>
        <groupId>com.fasterxml.jackson.datatype</groupId>
        <version>${jackson.databind.version}</version>
      </dependency>

      <dependency>
        <artifactId>jakarta.annotation-api</artifactId>
        <groupId>jakarta.annotation</groupId>
        <version>${jakarta.annotation.version}</version>
      </dependency>

      <dependency>
        <artifactId>jakarta.data-api</artifactId>
        <groupId>jakarta.data</groupId>
        <version>${jakarta.data.version}</version>
      </dependency>

      <dependency>
        <artifactId>jakarta.inject-api</artifactId>
        <groupId>jakarta.inject</groupId>
        <version>${jakarta.inject.version}</version>
      </dependency>

      <dependency>
        <artifactId>jakarta.jakartaee-api</artifactId>
        <groupId>jakarta.platform</groupId>
        <version>${jakarta.version}</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>jakarta.json</groupId>
        <artifactId>jakarta.json-api</artifactId>
        <version>${jakarta.json.version}</version>
      </dependency>

      <dependency>
        <artifactId>jakarta.json.bind-api</artifactId>
        <groupId>jakarta.json.bind</groupId>
        <version>${jakarta.json.bind.version}</version>
      </dependency>

      <dependency>
        <artifactId>jakarta.persistence-api</artifactId>
        <groupId>jakarta.persistence</groupId>
        <version>${jakarta.persistence.version}</version>
      </dependency>

      <dependency>
        <artifactId>jetcd-core</artifactId>
        <groupId>io.etcd</groupId>
        <version>${jetcd.version}</version>
      </dependency>

      <dependency>
        <artifactId>json-schema-validator</artifactId>
        <groupId>com.networknt</groupId>
        <version>${json.validator.version}</version>
      </dependency>

      <dependency>
        <artifactId>kafka-clients</artifactId>
        <groupId>org.apache.kafka</groupId>
        <version>${kafka.clients.version}</version>
      </dependency>

      <dependency>
        <artifactId>junit-platform-suite</artifactId>
        <groupId>org.junit.platform</groupId>
        <version>${junit.platform.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <artifactId>junit-platform-suite-api</artifactId>
        <groupId>org.junit.platform</groupId>
        <version>${junit.platform.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <artifactId>keycloak-admin-client</artifactId>
        <groupId>org.keycloak</groupId>
        <version>${keycloak.admin.version}</version>
      </dependency>

      <dependency>
        <artifactId>lettuce-core</artifactId>
        <groupId>io.lettuce</groupId>
        <version>${lettuce.version}</version>
      </dependency>

      <dependency>
        <artifactId>log4j-api</artifactId>
        <groupId>org.apache.logging.log4j</groupId>
        <version>${log4j.version}</version>
      </dependency>
  
      <dependency>
        <artifactId>log4j-core</artifactId>
        <groupId>org.apache.logging.log4j</groupId>
        <version>${log4j.version}</version>
      </dependency>
  
      <dependency>
        <artifactId>lombok</artifactId>
        <groupId>org.projectlombok</groupId>
        <version>${lombok.version}</version>
      </dependency>

      <dependency>
        <artifactId>mapstruct</artifactId>
        <groupId>org.mapstruct</groupId>
        <version>${mapstruct.version}</version>
      </dependency>

      <dependency>
        <artifactId>microprofile-config-api</artifactId>
        <groupId>org.eclipse.microprofile.config</groupId>
        <version>${microprofile.config.version}</version>
      </dependency>

      <dependency>
        <artifactId>microprofile-fault-tolerance-api</artifactId>
        <groupId>org.eclipse.microprofile.fault-tolerance</groupId>
        <version>${microprofile.fault-tolerance.version}</version>
      </dependency>

      <dependency>
        <artifactId>microprofile-graphql-api</artifactId>
        <groupId>org.eclipse.microprofile.graphql</groupId>
        <version>${microprofile.graphql.version}</version>
      </dependency>

      <dependency>
        <artifactId>microprofile-health-api</artifactId>
        <groupId>org.eclipse.microprofile.health</groupId>
        <version>${microprofile.health.version}</version>
      </dependency>

      <dependency>
        <artifactId>microprofile-jwt-auth-api</artifactId>
        <groupId>org.eclipse.microprofile.jwt</groupId>
        <version>${microprofile.jwt.version}</version>
      </dependency>
    
      <dependency>
        <artifactId>microprofile-openapi-api</artifactId>
        <groupId>org.eclipse.microprofile.openapi</groupId>
        <version>${microprofile.openapi.version}</version>
      </dependency>

      <dependency>
        <artifactId>microprofile-telemetry-api</artifactId>
        <groupId>org.eclipse.microprofile.telemetry</groupId>
        <version>${microprofile.telemetry.version}</version>
      </dependency>

      <dependency>
        <artifactId>minio</artifactId>
        <groupId>io.minio</groupId>
        <version>${minio.version}</version>
      </dependency>

      <dependency>
        <artifactId>mysql-connector-j</artifactId>
        <groupId>com.mysql</groupId>
        <version>${mysql.version}</version>
      </dependency>
      
      <dependency>
        <artifactId>opensearch-java</artifactId>
        <groupId>org.opensearch.client</groupId>
        <version>${opensearch.version}</version>
      </dependency>

      <dependency>
        <artifactId>postgresql</artifactId>
        <groupId>org.postgresql</groupId>
        <version>${postgresql.version}</version>
      </dependency>
    
      <dependency>
        <artifactId>problem</artifactId>
        <groupId>org.zalando</groupId>
        <version>${java.problem.version}</version>
      </dependency>

      <dependency>
        <artifactId>pulsar-client</artifactId>
        <groupId>org.apache.pulsar</groupId>
        <version>${pulsar.version}</version>
      </dependency>

      <dependency>
        <artifactId>record-builder-core</artifactId>
        <groupId>io.soabase.record-builder</groupId>
        <version>${recordbuilder.version}</version>
      </dependency>

      <dependency>
        <artifactId>sdk</artifactId>
        <groupId>dev.openfeature</groupId>
        <version>${openfeature.version}</version>
      </dependency>

      <dependency>
        <artifactId>seaweedfs-client</artifactId>
        <groupId>com.seaweedfs</groupId>
        <version>${seaweedfs.version}</version>
      </dependency>

      <dependency>
        <artifactId>slf4j-api</artifactId>
        <groupId>org.slf4j</groupId>
        <version>${slf4j.version}</version>
      </dependency>

      <dependency>
        <artifactId>smallrye-config</artifactId>
        <groupId>io.smallrye.config</groupId>
        <version>${smallrye.config.version}</version>
      </dependency>

      <dependency>
        <artifactId>smallrye-graphql-api</artifactId>
        <groupId>io.smallrye</groupId>
        <version>${smallrye.graphql.version}</version>
      </dependency>

      <dependency>
        <artifactId>smallrye-graphql-ui-graphiql</artifactId>
        <groupId>io.smallrye</groupId>
        <version>${smallrye.graphql-ui.version}</version>
      </dependency>

      <dependency>
        <artifactId>smallrye-health</artifactId>
        <groupId>io.smallrye</groupId>
        <version>${smallrye.health.version}</version>
      </dependency>
   
      <dependency>
        <artifactId>spring-boot</artifactId>
        <groupId>org.springframework.boot</groupId>
        <version>${spring.boot.version}</version>
      </dependency>
    
      <dependency>
        <artifactId>spring-boot-actuator</artifactId>
        <groupId>org.springframework.boot</groupId>
        <version>${spring.boot.version}</version>
      </dependency>
      
      <dependency>
        <artifactId>spring-boot-autoconfigure</artifactId>
        <groupId>org.springframework.boot</groupId>
        <version>${spring.boot.version}</version>
      </dependency>
    
      <dependency>
        <artifactId>spring-boot-starter-web</artifactId>
        <groupId>org.springframework.boot</groupId>
        <version>${spring.boot.version}</version>
      </dependency>

      <dependency>
        <artifactId>spring-web</artifactId>
        <groupId>org.springframework</groupId>
        <version>${spring.web.version}</version>
      </dependency>

      <dependency>
        <artifactId>transactionoutbox-core</artifactId>
        <groupId>com.gruelbox</groupId>
        <version>${transactionoutbox.version}</version>
      </dependency>

      <dependency>
          <artifactId>unleash-client-java</artifactId>
          <groupId>io.getunleash</groupId>
          <version>${unleash.version}</version>
      </dependency>

      <dependency>
          <artifactId>valkey-java</artifactId>
          <groupId>io.valkey</groupId>
          <version>${valkey.version}</version>
      </dependency>

      <dependency>
        <artifactId>xmemcached</artifactId>
        <groupId>com.googlecode.xmemcached</groupId>
        <version>${xmemcached.version}</version>
      </dependency>
              
      <!-- Test -->

      <dependency>
        <artifactId>archunit-junit5</artifactId>
        <groupId>com.tngtech.archunit</groupId>
        <version>${archunit.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <artifactId>cucumber-java</artifactId>
        <groupId>io.cucumber</groupId>
        <version>${cucumber.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <artifactId>cucumber-junit-platform-engine</artifactId>
        <groupId>io.cucumber</groupId>
        <version>${cucumber.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <artifactId>datafaker</artifactId>
        <groupId>net.datafaker</groupId>
        <version>${datafaker.version}</version>
        <scope>test</scope>
</dependency>

<!--
      <dependency>
        <artifactId>junit-jupiter</artifactId>
        <groupId>org.testcontainers</groupId>
        <version>${testcontainers.version}</version>
        <scope>test</scope>
      </dependency>
-->

      <dependency>
        <artifactId>junit-jupiter-engine</artifactId>
        <groupId>org.junit.jupiter</groupId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>

      <!--
      <dependency>
        <artifactId>junit-platform-console</artifactId>
        <groupId>org.junit.platform</groupId>
        <version>${junit.platform.version}</version>
        <scope>test</scope>
      </dependency>
      -->

      <dependency>
        <artifactId>kafka</artifactId>
        <groupId>org.testcontainers</groupId>
        <version>${testcontainers.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
          <artifactId>mockito-core</artifactId>
          <groupId>org.mockito</groupId>
          <version>${mockito.version}</version>
          <scope>test</scope>
      </dependency>
      
      <dependency>
        <artifactId>postgresql</artifactId>
        <groupId>org.testcontainers</groupId>
        <version>${testcontainers.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <artifactId>rest-assured</artifactId>
        <groupId>io.rest-assured</groupId>
        <version>${rest.assured.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <artifactId>testcontainers</artifactId>
        <groupId>org.testcontainers</groupId>
        <version>${testcontainers.version}</version>
        <scope>test</scope>
      </dependency>
    
    </dependencies>

  </dependencyManagement>
  
  <subprojects>
    <subproject>common</subproject>
    <subproject>catalog</subproject>
    <subproject>member</subproject>
    <subproject>workflow</subproject>
  </subprojects>

</project>

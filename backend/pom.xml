<project>

  <modelVersion>4.0.0</modelVersion>

  <artifactId>skillbase-backend</artifactId>
  <groupId>com.headspin.skillbase</groupId>
  <packaging>pom</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>skillbase-backend</name>

  <parent>
    <artifactId>skillbase</artifactId>
    <groupId>com.headspin.skillbase</groupId>
    <version>1.0-SNAPSHOT</version>
  </parent>

  <properties>
    <java.version>17</java.version>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
    <maven.compiler.release>17</maven.compiler.release>
    <maven.compiler.version>3.13.0</maven.compiler.version>
    <maven.resources.version>3.3.1</maven.resources.version>
    <archunit.version>1.3.0</archunit.version>
    <arquillian.version>1.4.0.Final</arquillian.version>
    <cloudevents.version>2.3.0</cloudevents.version>
    <config.etcd.version>3.0.1</config.etcd.version>
    <docker.plugin.version>0.44.0</docker.plugin.version>
    <flagd.version>0.8.3</flagd.version>
    <graphql.version>22.1</graphql.version>
    <jakarta.version>10.0.0</jakarta.version>
    <jakarta.inject.version>2.0.1</jakarta.inject.version>
    <jakarta.json.version>2.1.3</jakarta.json.version>
    <jakarta.persistence.version>3.2.0</jakarta.persistence.version>
    <junit.version>5.9.2</junit.version>
    <kafka.clients.version>3.7.0</kafka.clients.version>
    <keycloak.version>25.0.1</keycloak.version>
    <liquibase.maven.version>2.0.1</liquibase.maven.version>
    <liquibase.version>4.28.0</liquibase.version>
    <log4j.version>2.23.1</log4j.version>
    <lombok.version>1.18.32</lombok.version>
    <maven.formatter.version>2.24.1</maven.formatter.version>
    <maven.javadoc.version>3.7.0</maven.javadoc.version>
    <microprofile.config.version>3.1</microprofile.config.version>
    <microprofile.fault-tolerance.version>4.0.2</microprofile.fault-tolerance.version>
    <microprofile.graphql.version>2.0</microprofile.graphql.version>
    <microprofile.health.version>4.0.1</microprofile.health.version>
    <microprofile.jwt.version>2.1</microprofile.jwt.version>
    <microprofile.metrics.version>5.1.0</microprofile.metrics.version>
    <microprofile.openapi.version>3.1.1</microprofile.openapi.version>
    <openfeature.version>1.9.0</openfeature.version>
    <postgresql.version>42.7.3</postgresql.version>
    <resteasy.version>6.2.9.Final</resteasy.version>
    <slf4j.version>2.0.13</slf4j.version>
    <smallrye.graphql.version>2.8.4</smallrye.graphql.version>
    <smallrye.health.version>4.1.0</smallrye.health.version>
    <smallrye.openapi.version>3.11.0</smallrye.openapi.version>
    <springboot.version>3.3.1</springboot.version>
    <springboot.maven.version>3.3.0</springboot.maven.version>
    <springcore.version>6.1.10</springcore.version>
    <surefire.version>3.2.5</surefire.version>
    <swagger.version>2.1.6</swagger.version>
    <weld.junit.version>4.0.3.Final</weld.junit.version>
  </properties>

  <build>

    <pluginManagement>

      <plugins>

        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <groupId>org.apache.maven.plugins</groupId>
          <version>${maven.compiler.version}</version>
          <configuration>
            <source>${maven.compiler.source}</source>
            <target>${maven.compiler.target}</target>
          </configuration>
        </plugin>
        
        <plugin>
          <artifactId>docker-maven-plugin</artifactId>
          <groupId>io.fabric8</groupId>
          <version>${docker.plugin.version}</version>
        </plugin>
        
        <plugin>
          <artifactId>formatter-maven-plugin</artifactId>
          <groupId>net.revelc.code.formatter</groupId>
          <version>${maven.formatter.version}</version>
          <executions>
            <execution>
              <goals>
                <goal>format</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        
        <plugin>
          <artifactId>maven-javadoc-plugin</artifactId>
          <groupId>org.apache.maven.plugins</groupId>
          <version>${maven.javadoc.version}</version>
          <configuration>
            <show>private</show>
            <nohelp>true</nohelp>
          </configuration>
        </plugin>
        
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <groupId>org.apache.maven.plugins</groupId>
          <version>${maven.resources.version}</version>
        </plugin>

        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <groupId>org.apache.maven.plugins</groupId>
          <version>${surefire.version}</version>
        </plugin>
  
        <plugin>
          <artifactId>smallrye-graphql-maven-plugin</artifactId>
          <groupId>io.smallrye</groupId>
          <version>${smallrye.graphql.version}</version>
          <executions>
            <execution>
                <goals>
                    <goal>generate-schema</goal>
                </goals>
            </execution>
        </executions>
      </plugin>

        <!--
        <plugin>
          <artifactId>smallrye-openapi-maven-plugin</artifactId>
          <groupId>io.smallrye</groupId>
          <version>${smallrye.openapi.version}</version>
          <executions>
            <execution>
              <goals>
                <goal>generate-schema</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        -->
  
        <plugin>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <groupId>org.springframework.boot</groupId>
          <version>${springboot.maven.version}</version>
        </plugin>

      </plugins>

    </pluginManagement>

  </build>

<dependencyManagement>

    <dependencies>

      <dependency>
        <artifactId>archunit-junit5</artifactId>
        <groupId>com.tngtech.archunit</groupId>
        <version>${archunit.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <artifactId>arquillian-bom</artifactId>
        <groupId>org.jboss.arquillian</groupId>
        <version>${arquillian.version}</version>
        <scope>test</scope>
        <type>pom</type>
      </dependency>
    
      <dependency>
        <artifactId>cloudevents-api</artifactId>
        <groupId>io.cloudevents</groupId>
        <version>${cloudevents.version}</version>
      </dependency>

      <dependency>
        <artifactId>cloudevents-core</artifactId>
        <groupId>io.cloudevents</groupId>
        <version>${cloudevents.version}</version>
      </dependency>

      <dependency>
        <artifactId>cloudevents-kafka</artifactId>
        <groupId>io.cloudevents</groupId>
        <version>${cloudevents.version}</version>
      </dependency>

      <dependency>
        <artifactId>configsource-etcd</artifactId>
        <groupId>org.microprofile-ext.config-ext</groupId>
        <version>${config.etcd.version}</version>
      </dependency>
    
      <dependency>
        <artifactId>maven-javadoc-plugin</artifactId>
        <groupId>org.apache.maven.plugins</groupId>
        <version>${maven.javadoc.version}</version>
      </dependency>
    
      <dependency>
        <artifactId>sdk</artifactId>
        <groupId>dev.openfeature</groupId>
        <version>${openfeature.version}</version>
      </dependency>

      <dependency>
        <artifactId>flagd</artifactId>
        <groupId>dev.openfeature.contrib.providers</groupId>
        <version>${flagd.version}</version>
      </dependency>
      
      <dependency>
        <artifactId>graphql-java</artifactId>
        <groupId>com.graphql-java</groupId>
        <version>${graphql.version}</version>
      </dependency>

      <dependency>
        <artifactId>jakarta.inject-api</artifactId>
        <groupId>jakarta.inject</groupId>
        <version>${jakarta.inject.version}</version>
      </dependency>

      <dependency>
        <artifactId>jakarta.jakartaee-api</artifactId>
        <groupId>jakarta.platform</groupId>
        <version>${jakarta.version}</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>jakarta.json</groupId>
        <artifactId>jakarta.json-api</artifactId>
        <version>${jakarta.json.version}</version>
      </dependency>

      <dependency>
        <artifactId>jakarta.persistence-api</artifactId>
        <groupId>jakarta.persistence</groupId>
        <version>${jakarta.persistence.version}</version>
      </dependency>

      <dependency>
        <artifactId>junit-jupiter-engine</artifactId>
        <groupId>org.junit.jupiter</groupId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <artifactId>kafka-clients</artifactId>
        <groupId>org.apache.kafka</groupId>
        <version>${kafka.clients.version}</version>
      </dependency>

      <dependency>
        <artifactId>keycloak-admin-client</artifactId>
        <groupId>org.keycloak</groupId>
        <version>${keycloak.version}</version>
      </dependency>

      <dependency>
        <artifactId>liquibase-core</artifactId>
        <groupId>org.liquibase</groupId>
        <version>${liquibase.version}</version>
      </dependency>

      <dependency>
        <artifactId>log4j-api</artifactId>
        <groupId>org.apache.logging.log4j</groupId>
        <version>${log4j.version}</version>
      </dependency>
  
      <dependency>
        <artifactId>log4j-core</artifactId>
        <groupId>org.apache.logging.log4j</groupId>
        <version>${log4j.version}</version>
      </dependency>
  
      <dependency>
        <artifactId>lombok</artifactId>
        <groupId>org.projectlombok</groupId>
        <version>${lombok.version}</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <artifactId>maven-compiler-plugin</artifactId>
        <groupId>org.apache.maven.plugins</groupId>
        <version>${maven.compiler.version}</version>
      </dependency>

      <dependency>
        <artifactId>microprofile-config-api</artifactId>
        <groupId>org.eclipse.microprofile.config</groupId>
        <version>${microprofile.config.version}</version>
      </dependency>

      <dependency>
        <artifactId>microprofile-fault-tolerance-api</artifactId>
        <groupId>org.eclipse.microprofile.fault-tolerance</groupId>
        <version>${microprofile.fault-tolerance.version}</version>
      </dependency>

      <dependency>
        <artifactId>microprofile-graphql-api</artifactId>
        <groupId>org.eclipse.microprofile.graphql</groupId>
        <version>${microprofile.graphql.version}</version>
      </dependency>

      <dependency>
        <artifactId>microprofile-health-api</artifactId>
        <groupId>org.eclipse.microprofile.health</groupId>
        <version>${microprofile.health.version}</version>
      </dependency>

      <dependency>
        <artifactId>microprofile-jwt-auth-api</artifactId>
        <groupId>org.eclipse.microprofile.jwt</groupId>
        <version>${microprofile.jwt.version}</version>
      </dependency>
    
      <dependency>
        <artifactId>microprofile-metrics-api</artifactId>
        <groupId>org.eclipse.microprofile.metrics</groupId>
        <version>${microprofile.metrics.version}</version>
      </dependency>

      <dependency>
        <artifactId>microprofile-openapi-api</artifactId>
        <groupId>org.eclipse.microprofile.openapi</groupId>
        <version>${microprofile.openapi.version}</version>
      </dependency>

      <dependency>
        <artifactId>postgresql</artifactId>
        <groupId>org.postgresql</groupId>
        <version>${postgresql.version}</version>
      </dependency>

      <dependency>
        <artifactId>resteasy-client</artifactId>
        <groupId>org.jboss.resteasy</groupId>
        <version>${resteasy.version}</version>
      </dependency>

      <dependency>
        <artifactId>slf4j-api</artifactId>
        <groupId>org.slf4j</groupId>
        <version>${slf4j.version}</version>
      </dependency>

      <dependency>
        <artifactId>smallrye-graphql-api</artifactId>
        <groupId>io.smallrye</groupId>
        <version>${smallrye.graphql.version}</version>
      </dependency>

      <dependency>
        <artifactId>smallrye-health</artifactId>
        <groupId>io.smallrye</groupId>
        <version>${smallrye.health.version}</version>
      </dependency>
   
      <dependency>
        <artifactId>smallrye-open-api-maven-plugin</artifactId>
        <groupId>io.smallrye</groupId>
        <version>${smallrye.openapi.version}</version>
      </dependency>

      <dependency>
        <artifactId>spring-boot</artifactId>
        <groupId>org.springframework.boot</groupId>
        <version>${springboot.version}</version>
      </dependency>

      <dependency>
        <artifactId>spring-boot-autoconfigure</artifactId>
        <groupId>org.springframework.boot</groupId>
        <version>${springboot.version}</version>
      </dependency>

      <dependency>
        <artifactId>spring-boot-starter-actuator</artifactId>
        <groupId>org.springframework.boot</groupId>
        <version>${springboot.version}</version>
      </dependency>

      <dependency>
        <artifactId>spring-boot-starter-web</artifactId>
        <groupId>org.springframework.boot</groupId>
        <version>${springboot.version}</version>
      </dependency>
      
      <dependency>
        <artifactId>spring-core</artifactId>
        <groupId>org.springframework</groupId>
        <version>${springcore.version}</version>
      </dependency>

      <dependency>
        <groupId>io.openapitools.swagger</groupId>
        <artifactId>swagger-maven-plugin</artifactId>
        <version>${swagger.version}</version>
      </dependency>

      <dependency>
        <artifactId>weld-junit5</artifactId>
        <groupId>org.jboss.weld</groupId>
        <version>${weld.junit.version}</version>
        <scope>test</scope>
      </dependency>
       
    </dependencies>

  </dependencyManagement>
  
  <modules>
    <module>catalog</module>
    <module>certify</module>
    <module>identity</module>
  </modules>

</project>

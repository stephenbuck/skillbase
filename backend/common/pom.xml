<project>

  <modelVersion>4.0.0</modelVersion>

  <name>skillbase-backend-common</name>
  <packaging>jar</packaging>

  <artifactId>skillbase-backend-common</artifactId>
  <groupId>com.headspin.skillbase</groupId>
  <version>0.1</version>

  <parent>
    <artifactId>skillbase-backend</artifactId>
    <groupId>com.headspin.skillbase</groupId>
    <version>0.1</version>
  </parent>

  <build>

    <plugins>

      <plugin>
        <artifactId>build-helper-maven-plugin</artifactId>
        <groupId>org.codehaus.mojo</groupId>
      </plugin>

      <plugin>
        <artifactId>buildplan-maven-plugin</artifactId>
        <groupId>org.codehaus.mojo</groupId>
      </plugin>

      <plugin>
          <artifactId>maven-antrun-plugin</artifactId>
          <groupId>org.apache.maven.plugins</groupId>
          <executions>
            <execution>
                <!--Work around. Surefire does not use JUnit's Test Engine discovery functionality -->
                <id>CLI-test</id>
                <phase>integration-test</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                      <echo message="Running JUnit Platform CLI"/>
                      <java classname="org.junit.platform.console.ConsoleLauncher"
                            fork="true"
                            failonerror="true"
                            newenvironment="true"
                            maxmemory="512m"
                            classpathref="maven.test.classpath">
                        <arg value="--include-engine"/>
                        <arg value="cucumber"/>
                        <arg value="--scan-classpath"/>
                        <arg value="${project.build.testOutputDirectory}"/>
                      </java>
                  </target>
                </configuration>
            </execution>
          </executions>
      </plugin>
      
      <plugin>
        <artifactId>docker-maven-plugin</artifactId>
        <groupId>io.fabric8</groupId>
        <configuration>
          <images>
            <image>
              <name>skillbase/group:${project.version}</name>
              <build>
                <dockerFileDir>${project.dir}</dockerFileDir>
              </build>
            </image>
          </images>
        </configuration>
      </plugin>

      <!--
      <plugin>
        <artifactId>formatter-maven-plugin</artifactId>
        <groupId>net.revelc.code.formatter</groupId>
        <executions>
          <execution>
            <goals>
              <goal>format</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      -->
      
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <groupId>org.apache.maven.plugins</groupId>
      </plugin>

      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <groupId>org.apache.maven.plugins</groupId>
      </plugin>

      <plugin>
        <artifactId>maven-install-plugin</artifactId>
        <groupId>org.apache.maven.plugins</groupId>
      </plugin>
      
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <groupId>org.apache.maven.plugins</groupId>
      </plugin>

      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <groupId>org.apache.maven.plugins</groupId>
      </plugin>

      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <groupId>org.apache.maven.plugins</groupId>
      </plugin>

      <!--
      <plugin>
        <artifactId>revapi-maven-plugin</artifactId>
        <groupId>org.revapi</groupId>
          <version>${revapi.plugin.version}</version>
        <dependencies>
          <dependency>
            <artifactId>revapi-java</artifactId>
            <groupId>org.revapi</groupId>
          <version>${revapi.java.version}</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>check</id>
            <goals><goal>check</goal></goals>
          </execution>
        </executions>
      </plugin>
      -->

      <plugin>
        <artifactId>rewrite-maven-plugin</artifactId>
        <groupId>org.openrewrite.maven</groupId>
        <version>${maven.rewrite.version}</version>
        <configuration>
          <activeRecipes>
          </activeRecipes>
          <activeStyles>
          </activeStyles>
          <configLocation>./rewrite.yml</configLocation>
          <failOnDryRunResults>false</failOnDryRunResults>
          <exclusions>
          </exclusions>
          <plainTextMasks>
          </plainTextMasks>
        </configuration>
      </plugin>

    <!--
      <plugin>
        <artifactId>smallrye-graphql-maven-plugin</artifactId>
        <groupId>io.smallrye</groupId>
      </plugin>
      -->

      <!--
      <plugin>
        <artifactId>smallrye-open-api-maven-plugin</artifactId>
        <groupId>io.smallrye</groupId>
      </plugin>
      -->

      <plugin>
        <artifactId>templating-maven-plugin</artifactId>
        <groupId>org.codehaus.mojo</groupId>
      </plugin>
        
      <plugin>  
        <artifactId>versions-maven-plugin</artifactId>  
        <groupId>org.codehaus.mojo</groupId>  
      </plugin>  

    </plugins>

  </build>

  <dependencies>

    <!-- External -->

    <dependency>
      <artifactId>cloudevents-api</artifactId>
      <groupId>io.cloudevents</groupId>
    </dependency>

    <dependency>
      <artifactId>cloudevents-core</artifactId>
      <groupId>io.cloudevents</groupId>
    </dependency>

    <dependency>
      <artifactId>cloudevents-json-jackson</artifactId>
      <groupId>io.cloudevents</groupId>
    </dependency>

    <dependency>
      <artifactId>cloudevents-kafka</artifactId>
      <groupId>io.cloudevents</groupId>
    </dependency>

    <dependency>
      <artifactId>elasticsearch-java</artifactId>
      <groupId>co.elastic.clients</groupId>
    </dependency>

    <dependency>
      <artifactId>flipt-java</artifactId>
      <groupId>io.flipt</groupId>
    </dependency>
  
    <dependency>
      <artifactId>graphql-java</artifactId>
      <groupId>com.graphql-java</groupId>
    </dependency>

    <dependency>
      <artifactId>jackson-databind</artifactId>
      <groupId>com.fasterxml.jackson.core</groupId>
    </dependency>

    <dependency>
        <artifactId>jackson-datatype-jsr310</artifactId>
        <groupId>com.fasterxml.jackson.datatype</groupId>
    </dependency>

    <dependency>
      <artifactId>jakarta.data-api</artifactId>
      <groupId>jakarta.data</groupId>
    </dependency>

    <dependency>
      <artifactId>jakarta.inject-api</artifactId>
      <groupId>jakarta.inject</groupId>
    </dependency>

    <dependency>
      <artifactId>jakarta.jakartaee-api</artifactId>
      <groupId>jakarta.platform</groupId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <artifactId>jakarta.json-api</artifactId>
      <groupId>jakarta.json</groupId>
    </dependency>

    <dependency>
      <artifactId>jakarta.persistence-api</artifactId>
      <groupId>jakarta.persistence</groupId>
    </dependency>

    <dependency>
      <artifactId>jetcd-core</artifactId>
      <groupId>io.etcd</groupId>
    </dependency>
    
    <dependency>
      <artifactId>json-schema-validator</artifactId>
      <groupId>com.networknt</groupId>
    </dependency>

    <dependency>
      <artifactId>kafka-clients</artifactId>
      <groupId>org.apache.kafka</groupId>
    </dependency>

    <dependency>
      <artifactId>lettuce-core</artifactId>
      <groupId>io.lettuce</groupId>
    </dependency>

    <dependency>
      <artifactId>log4j-api</artifactId>
      <groupId>org.apache.logging.log4j</groupId>
    </dependency>

    <dependency>
      <artifactId>log4j-core</artifactId>
      <groupId>org.apache.logging.log4j</groupId>
    </dependency>

    <dependency>
      <artifactId>lombok</artifactId>
      <groupId>org.projectlombok</groupId>
    </dependency>

    <dependency>
      <artifactId>microprofile-fault-tolerance-api</artifactId>
      <groupId>org.eclipse.microprofile.fault-tolerance</groupId>
    </dependency>

    <dependency>
      <artifactId>microprofile-graphql-api</artifactId>
      <groupId>org.eclipse.microprofile.graphql</groupId>
    </dependency>

    <dependency>
      <artifactId>microprofile-health-api</artifactId>
      <groupId>org.eclipse.microprofile.health</groupId>
    </dependency>

    <dependency>
      <artifactId>microprofile-openapi-api</artifactId>
      <groupId>org.eclipse.microprofile.openapi</groupId>
    </dependency>

    <dependency>
      <artifactId>minio</artifactId>
      <groupId>io.minio</groupId>
    </dependency>

    <dependency>
      <artifactId>pulsar-client</artifactId>
      <groupId>org.apache.pulsar</groupId>
    </dependency>

    <dependency>
      <artifactId>seaweedfs-client</artifactId>
      <groupId>com.seaweedfs</groupId>
    </dependency>

    <dependency>
      <artifactId>slf4j-api</artifactId>
      <groupId>org.slf4j</groupId>
    </dependency>

    <dependency>
      <artifactId>smallrye-graphql-api</artifactId>
      <groupId>io.smallrye</groupId>
    </dependency>

    <dependency>
      <artifactId>smallrye-health</artifactId>
      <groupId>io.smallrye</groupId>
    </dependency>

    <dependency>
      <artifactId>unleash-client-java</artifactId>
      <groupId>io.getunleash</groupId>
    </dependency>

    <dependency>
      <artifactId>xmemcached</artifactId>
      <groupId>com.googlecode.xmemcached</groupId>
    </dependency>
    
    <dependency>
        <artifactId>valkey-java</artifactId>
        <groupId>io.valkey</groupId>
    </dependency>

    <!-- Test -->

    <dependency>
      <artifactId>archunit-junit5</artifactId>
      <groupId>com.tngtech.archunit</groupId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <artifactId>cucumber-java</artifactId>
      <groupId>io.cucumber</groupId>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <artifactId>junit-platform-suite</artifactId>
      <groupId>org.junit.platform</groupId>
      <version>1.11.1</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <artifactId>junit-platform-suite-api</artifactId>
      <groupId>org.junit.platform</groupId>
      <version>1.11.1</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <artifactId>cucumber-junit-platform-engine</artifactId>
      <groupId>io.cucumber</groupId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <artifactId>datafaker</artifactId>
      <groupId>net.datafaker</groupId>
      <scope>test</scope>
    </dependency>      

    <dependency>
      <artifactId>junit-jupiter</artifactId>
      <groupId>org.testcontainers</groupId>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <artifactId>junit-jupiter-engine</artifactId>
      <groupId>org.junit.jupiter</groupId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <artifactId>kafka</artifactId>
      <groupId>org.testcontainers</groupId>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <artifactId>postgresql</artifactId>
      <groupId>org.testcontainers</groupId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <artifactId>rest-assured</artifactId>
      <groupId>io.rest-assured</groupId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <artifactId>testcontainers</artifactId>
      <groupId>org.testcontainers</groupId>
      <scope>test</scope>
    </dependency>
    
  </dependencies>

</project>
